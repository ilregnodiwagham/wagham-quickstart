name: Release management

on:
  pull_request:
    types:
      - closed
    branches:
      - 'main'

jobs:
  if_merged:
    name: Create a new release of the Compendium
    if: github.event.pull_request.merged == true && (contains(github.event.pull_request.labels.*.name, 'major') || contains(github.event.pull_request.labels.*.name, 'minor') || contains(github.event.pull_request.labels.*.name, 'patch'))
    runs-on: ubuntu-latest
    steps:

      - name: Checkout
        uses: actions/checkout@v3

      - name: Extract version from module.json
        uses: sergeysova/jq-action@v2
        id: version
        with:
          cmd: 'jq .version module.json -r'

      - name: Creation new version (Major) üè∑Ô∏è
        if: ${{ contains(github.event.pull_request.labels.*.name, 'major') }}
        id: bump_version_major
        uses: christian-draeger/increment-semantic-version@1.0.3
        with:
          current-version: ${{ steps.version.outputs.value }}
          version-fragment: 'major'

      - name: Update module.json version
        uses: jossef/action-set-json-field@v2
        if: ${{ contains(github.event.pull_request.labels.*.name, 'major') }}
        with:
          file: module.json
          field: version
          value: ${{ steps.bump_version_major.outputs.next-version }}

      - name: Creation new version (Minor) üè∑Ô∏è
        if: ${{ contains(github.event.pull_request.labels.*.name, 'minor') }}
        id: bump_version_minor
        uses: christian-draeger/increment-semantic-version@1.0.3
        with:
          current-version: ${{ steps.version.outputs.value }}
          version-fragment: 'feature'

      - name: Update module.json version
        uses: jossef/action-set-json-field@v2
        if: ${{ contains(github.event.pull_request.labels.*.name, 'minor') }}
        with:
          file: module.json
          field: version
          value: ${{ steps.bump_version_minor.outputs.next-version }}

      - name: Creation new version (Patch) üè∑Ô∏è
        if: ${{ contains(github.event.pull_request.labels.*.name, 'patch') }}
        id: bump_version_patch
        uses: christian-draeger/increment-semantic-version@1.0.3
        with:
          current-version: ${{ steps.version.outputs.value }}
          version-fragment: 'bug'

      - name: Update module.json version
        uses: jossef/action-set-json-field@v2
        if: ${{ contains(github.event.pull_request.labels.*.name, 'patch') }}
        with:
          file: module.json
          field: version
          value: ${{ steps.bump_version_patch.outputs.next-version }}

      - name: Extract new version from module.json
        uses: sergeysova/jq-action@v2
        id: new_version
        with:
          cmd: 'jq .version module.json -r'

      - name: Updates module.json download link
        uses: jossef/action-set-json-field@v2
        with:
          file: module.json
          field: download
          value: ${{ format('https://github.com/ilregnodiwagham/wagham-quickstart/releases/download/{0}/Release_v_{0}.zip', steps.new_version.outputs.value) }}

      - name: Commit changes
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          branch: main
          commit_message: Updated version
          commit_user_name: Il Regno di Wagham
          commit_user_email: info@wagham.it

      - name: Creates module zip file
        uses: thedoctor0/zip-release@main
        with:
          type: 'zip'
          filename: ${{ format('Release_v_{0}.zip', steps.new_version.outputs.value) }}
          exclusions: '*.git*'

      - name: Upload Release
        uses: ncipollo/release-action@v1
        with:
          artifacts: ${{ format('Release_v_{0}.zip', steps.new_version.outputs.value) }}
          token: ${{ secrets.GITHUB_TOKEN }}